import os
import pandas as pd

# Test from Patch 2
def test_rebalance_trades_file_written():
    path = "reports/rebalance_trades.csv"
    assert os.path.exists(path), f"{path} отсутствует после симуляции."
    # Check if file has content beyond just headers, size > 0 is a basic check
    assert os.path.getsize(path) > 0, f"Файл {path} пуст."
    df = pd.read_csv(path)
    assert not df.empty, "Файл rebalance_trades.csv пуст (pandas check), несмотря на завершённую симуляцию."
    assert "pnl_gross_quote" in df.columns, "Отсутствует колонка pnl_gross_quote."

# Test from Patch 3
def test_pnl_matches_nav_change():
    # It's assumed that these files are generated by a prior backtest run
    trades_path = "reports/rebalance_trades.csv"
    equity_path = "reports/equity.csv"

    assert os.path.exists(trades_path), f"{trades_path} отсутствует для проверки PnL vs NAV."
    assert os.path.exists(equity_path), f"{equity_path} отсутствует для проверки PnL vs NAV."

    df_trades = pd.read_csv(trades_path)
    df_equity = pd.read_csv(equity_path)

    # Ensure files are not empty before proceeding
    assert not df_trades.empty, f"{trades_path} пуст."
    assert not df_equity.empty, f"{equity_path} пуст."

    # Ensure required columns exist
    assert "portfolio_value_usdt" in df_equity.columns, f"Колонка 'portfolio_value_usdt' отсутствует в {equity_path}"
    assert "pnl_gross_quote" in df_trades.columns, f"Колонка 'pnl_gross_quote' отсутствует в {trades_path}"

    nav_start = df_equity["portfolio_value_usdt"].iloc[0]
    nav_end = df_equity["portfolio_value_usdt"].iloc[-1]
    nav_diff = nav_end - nav_start

    # Handle cases where pnl_gross_quote might be NaN or not present for all trades
    pnl_total = df_trades["pnl_gross_quote"].sum() if "pnl_gross_quote" in df_trades.columns and not df_trades["pnl_gross_quote"].empty else 0

    delta = abs(nav_diff - pnl_total)
    tolerance = 1.0  # USDT
    assert delta < tolerance, f"NAV change ({nav_diff:.2f}) ≠ ∑PnL ({pnl_total:.2f}); расхождение {delta:.2f} USDT"
