diff --git a/config/unified_config.example.json b/config/unified_config.example.json
@@   "optimization_space": [
-      { "path": "spot_pct", "type": "categorical",
-        "choices": [0.80,0.75,0.70,0.65,0.60,0.55,0.50,0.45,
-                    0.40,0.35,0.30,0.25,0.20,0.15,0.10,0.05] },
-
-      { "path": "rebalance_threshold",               "type": "float", "low": 0.005, "high": 0.05 },
-      { "path": "min_order_notional_usdt",           "type": "float", "low": 20,    "high": 60  },
-      { "path": "min_rebalance_interval_minutes",    "type": "int",   "low": 30,    "high": 180 },
-
-      /* — удаляем любые параметры сигналов / safe_mode из neutral-режима — */
-
-      { "path": "data_settings.price_col_for_rebalance", "type": "categorical",
-        "choices": ["close"] }
+      { "path": "spot_pct", "type": "categorical",
+        "choices": [0.80,0.75,0.70,0.65,0.60,0.55,0.50,0.45,
+                    0.40,0.35,0.30,0.25,0.20,0.15,0.10,0.05] },
+
+      { "path": "rebalance_threshold",               "type": "float", "low": 0.005, "high": 0.05 },
+      { "path": "min_order_notional_usdt",           "type": "float", "low": 20,    "high": 60  },
+      { "path": "min_rebalance_interval_minutes",    "type": "int",   "low": 30,    "high": 180 }
   ]
 }
diff --git a/src/prosperous_bot/rebalance_optimizer.py b/src/prosperous_bot/rebalance_optimizer.py
@@
-    tw_path = f"target_weights_normal.{main_asset_symbol}_"
-    set_deep_key(current_backtest_params, tw_path+"SPOT",        spot_pct)
-    set_deep_key(current_backtest_params, tw_path+"PERP_LONG",   long_pct)
-    set_deep_key(current_backtest_params, tw_path+"PERP_SHORT",  short_pct)
+    tw = current_backtest_params.setdefault("target_weights_normal", {})
+    tw[f"{main_asset_symbol}_SPOT"]        = round(spot_pct, 4)
+    tw[f"{main_asset_symbol}_PERP_LONG"]   = round(long_pct, 4)
+    tw[f"{main_asset_symbol}_PERP_SHORT"]  = round(short_pct, 4)

@@  for opt in optimization_space:
-        if opt["path"] == "spot_pct":
+        # spot_pct уже обработали
+        if opt["path"] == "spot_pct":
             continue
-        set_deep_key(current_backtest_params, opt["path"],
-                     suggest_by_type(opt, trial))
+        # сигнальные / safe_mode параметры игнорируем в neutral-режиме
+        if not apply_signal_logic and (
+            ".signal" in opt["path"] or "safe_mode" in opt["path"]
+        ):
+            continue
+        set_deep_key(current_backtest_params, opt["path"],
+                     suggest_by_type(opt, trial))

@@
-    value = results["sharpe_ratio"]
+    pnl_abs = abs(results["total_net_pnl_percent"])
+    std_nav = results.get("nav_std_percent", 0.0)
+    comm_ratio = results.get("total_commissions_usdt", 0.0) / current_backtest_params["initial_portfolio_value_usdt"]
+
+    value = -(pnl_abs + 0.5 * std_nav + 0.1 * comm_ratio)
     return value
@@
-    best_cfg = study.best_trial.user_attrs["backtest_config"]
-    json.dump(best_cfg, open("reports/best_backtest_config.json", "w"), indent=2)
+    best_cfg = study.best_trial.user_attrs["backtest_config"]
+    # — удаляем placeholder-ключи (если вдруг остались) —
+    best_cfg["target_weights_normal"] = {
+        k: v for k, v in best_cfg["target_weights_normal"].items()
+        if "{" not in k
+    }
+    json.dump(best_cfg, open("reports/best_backtest_config.json", "w"), indent=2)
diff --git a/src/prosperous_bot/rebalance_backtester.py b/src/prosperous_bot/rebalance_backtester.py
@@
-    metrics["nav_std_percent"] = nav_series.std()/initial_portfolio_value_usdt*100
+    metrics["nav_std_percent"] = nav_series.pct_change().fillna(0).std()*100
