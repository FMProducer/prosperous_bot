# ---------- internal ----------
async def _sync_time(self):
    """Обновляет _time_offset; безопасна при замоканном spot_api."""
    if time.time() - self._last_sync < 60:
        return
    # если SpotApi – Mock без api_client → пропускаем
    if not hasattr(self.spot_api, "api_client"):
        return
    now = time.time()                     # фиксируем сразу
    srv = await self._safe_call(self.spot_api.get_system_time)
    self._last_sync = now                 # сначала обновляем
    self._time_offset = srv.server_time - int(now * 1000)

# ---------- time ----------
@property
def time_offset(self) -> int:             # тест обращается к свойству
    return self._time_offset

# ---------- positions ----------
async def positions(self, contract: str | None = None):
    # Синхронизацию времени вызываем ТОЛЬКО если spot_api полноценный
    if hasattr(self.spot_api, "api_client"):
        await self._sync_time()
    pos = await self._safe_call(
        self.futures_api.list_positions, settle="usdt"
    )
    if contract:
        return [p for p in pos if getattr(p, "contract", None) == contract]
    return pos
